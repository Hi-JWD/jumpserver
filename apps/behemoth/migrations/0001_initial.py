# Generated by Django 4.1.13 on 2024-07-01 09:44

import common.db.encoder
from django.db import migrations, models
import django.db.models.deletion
import uuid


platform_data = {
    "category": "worker",
    "type": "worker",
    "internal": True,
    "charset": "utf-8",
    "domain_enabled": False,
    "su_enabled": False,
    "name": "Worker",
    "automation": {
        "ansible_enabled": True,
        "ansible_config": {
            "ansible_connection": "smart"
        },
        "ping_enabled": True,
        "ping_method": "ping_by_ssh",
        "gather_facts_enabled": False,
        "gather_accounts_enabled": False,
        "verify_account_enabled": False,
        "change_secret_enabled": False,
        "push_account_enabled": False,
    },
    "protocols": [
        {
            "name": "ssh",
            "port": 22,
            "setting": {
                "sftp_enabled": True,
                "sftp_home": "/tmp"
            },
            "primary": True,
            "required": False,
            "default": False
        }
    ]
}


def create_worker_platforms(apps, *args):
    platform_cls = apps.get_model('assets', 'Platform')
    automation_cls = apps.get_model('assets', 'PlatformAutomation')
    automation_data = platform_data.pop('automation', {})
    protocols_data = platform_data.pop('protocols', [])
    name = platform_data['name']
    platform, created = platform_cls.objects.update_or_create(
        defaults=platform_data, name=name
    )
    if created:
        automation = automation_cls.objects.create()
        platform.automation = automation
        platform.save()
    else:
        automation = platform.automation
    for k, v in automation_data.items():
        setattr(automation, k, v)
    automation.save()

    platform.protocols.all().delete()
    for p in protocols_data:
        platform.protocols.create(**p)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0020_alter_accountbackupautomation_backup_type_and_more'),
        ('assets', '0127_automation_remove_account'),
    ]

    operations = [
        migrations.RunPython(create_worker_platforms),
        migrations.CreateModel(
            name='Command',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('input', models.CharField(blank=True, max_length=1024, verbose_name='输入')),
                ('output', models.CharField(blank=True, max_length=1024, verbose_name='输出')),
                ('index', models.IntegerField(db_index=True, verbose_name='索引')),
                ('status', models.CharField(default='waiting', max_length=32, verbose_name='状态')),
                ('execution_id', models.CharField(max_length=36, verbose_name='Execution')),
                ('timestamp', models.IntegerField(db_index=True, default=0)),
                ('category', models.CharField(default='command', max_length=16, verbose_name='类别')),
                ('pause', models.BooleanField(default=False, verbose_name='Pause')),
            ],
            options={
                'verbose_name': '命令',
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('assets', models.ManyToManyField(to='assets.database', verbose_name='资产')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('plan_meta', models.JSONField(default=dict, verbose_name='Plan meta')),
                ('user_id', models.CharField(max_length=36, verbose_name='用户')),
                ('reason', models.CharField(default='-', max_length=512, verbose_name='原因')),
                ('status', models.CharField(default='not_start', max_length=32, verbose_name='状态')),
                ('playback_id', models.CharField(default='', max_length=36, verbose_name='Playback')),
                ('task_id', models.CharField(default='', max_length=36, verbose_name='Task ID')),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.account', verbose_name='账号')),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e2s', to='assets.database', verbose_name='资产')),
            ],
            options={
                'verbose_name': '任务',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Iteration',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
            ],
            options={
                'verbose_name': 'Iteration',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('plan_strategy', models.CharField(choices=[('failed_continue', 'Failed continue'), ('failed_stop', 'Failed stop')], default='failed_stop', max_length=32, verbose_name='Plan strategy')),
                ('playback_strategy', models.CharField(choices=[('auto', 'Auto add'), ('manual', 'Manual add'), ('never', 'Never add')], default='auto', max_length=32, verbose_name='Playback strategy')),
                ('category', models.CharField(choices=[('sync', 'Sync'), ('deploy', 'Deploy')], default='deploy', max_length=32, verbose_name='类别')),
                ('status', models.CharField(default='not_start', max_length=32, verbose_name='状态')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.account', verbose_name='账号')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.database', verbose_name='资产')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='behemoth.environment', verbose_name='Environment')),
            ],
            options={
                'verbose_name': 'Plan',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assets.asset')),
                ('base', models.CharField(choices=[('linux', 'Linux'), ('mac', 'Mac')], default='linux', max_length=16, verbose_name='系统平台')),
                ('meta', models.JSONField(default=dict, encoder=common.db.encoder.ModelJSONFieldEncoder, verbose_name='元数据')),
            ],
            options={
                'verbose_name': 'Worker',
            },
            bases=('assets.asset',),
        ),
        migrations.CreateModel(
            name='SubPlan',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('category', models.CharField(choices=[('sync', 'Sync'), ('deploy', 'Deploy')], default='cmd', max_length=32, verbose_name='类别')),
                ('serial', models.IntegerField(db_index=True, default=0, verbose_name='Serial')),
                ('execution', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_plan', to='behemoth.execution', verbose_name='Execution')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subs', to='behemoth.plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Sub plan',
                'ordering': ('-serial',),
            },
        ),
        migrations.CreateModel(
            name='Playback',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('environment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playbacks', to='behemoth.environment', verbose_name='Environment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='plan',
            name='playback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='behemoth.playback', verbose_name='Playback'),
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('created_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('content', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('index', models.IntegerField(db_index=True, verbose_name='索引')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='behemoth.plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Instruction',
                'ordering': ('-date_created', 'index'),
            },
        ),
        migrations.AddField(
            model_name='execution',
            name='worker',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e1s', to='behemoth.worker', verbose_name='Worker'),
        ),
    ]
